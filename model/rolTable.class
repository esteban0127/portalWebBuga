<?php

use portarWebBuga\model\base\rolBaseTable;


/**
 * Description of rolTable
 *
 * @author lizethgiraldo
 */
class rolTable extends rolBaseTable {
    
  public function getAll (){
    
    $conn = $this -> getConnection ($this->config);
    $sql = '';
    
    $answer = $conn -> prepare ($sql);
    $answer ->execute();
    return ($answer -> rowCount() > 0) ? $answer-> fetchAll (PDO::FETCH_OBJ) : false;
  }
  
  public function getById($id){
   $conn = $this -> getConnection ($this->config);
    $sql = '';
    
    $params = array(':id' = $id);
    $answer = $conn -> prepare ($sql);
    $answer -> execute ($params);
    return ($answer -> rowCount() > 0) ? $answer-> fetchAll (PDO::FETCH_OBJ) : false;  
  }
  
  public function save(){
   $conn 
           = $this -> getConnection ($this->config);
    $sql = '';
    
    $params = array(
        'rol_id' => $this->getId(),
        'rol_rol' => $this->getRol()
            );
    $answer = $conn -> prepare ($sql);
    $answer -> execute ($params);
    return $conn->lastInsertId(self::_SEQUENCE);  
  }
  
  public function update(){
   $conn = $this -> getConnection ($this->config);
    $sql = '';
    
    $params = array(
        'rol_id' => $this->getId(),
        'rol_rol' => $this->getRol()
            );
    $answer = $conn -> prepare ($sql);
    $answer -> execute ($params);
    return true;  
  }
  
  public function delete($deleteLogical= true){
   $conn = $this -> getConnection ($this->config);
    $params = array(
       ':id' => $this->getId() 
       );
    switch ($deleteLogical){
      case true:
        $sql = '';
        break;
      case false:
        $sql = '';
        break;
      default:
        throw new PDOException('Por favor indique un dato coherente para el borrado lógico (true) o físico (false)');
        
    }
    $answer = $conn->prepare($sql);
    $answer -> execute ($params);
    return true;  
  }
  
  
}
